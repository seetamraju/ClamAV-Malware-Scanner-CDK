#!/bin/bash -f

### --SOURCE-- this script !!!

### Use this script to get started with this Python-AWS-CDK project .. and build the CDK-deployables.
### This script can also be used to START AFRESH, instead of destroying everything and git-clone again.

### -----------------------------------------------------------
### @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
### -----------------------------------------------------------

### SECTION: Derived Variables

SCRIPTFOLDER=$(dirname -- "$0")
SCRIPTNAME=$(basename -- "$0")
echo "SCRIPTFOLDER = '${SCRIPTFOLDER}'"
echo "SCRIPTNAME = '${SCRIPTNAME}'"
if [ -e "$(pwd)/${SCRIPTFOLDER}" ]; then
    echo "Detected Relative-Path for script".
    SCRIPTFOLDER_FULLPATH="$(pwd)/${SCRIPTFOLDER}"
else
    echo "Detected Absolute-Path for script".
    SCRIPTFOLDER_FULLPATH="${SCRIPTFOLDER}"
fi
echo "SCRIPTFOLDER_FULLPATH = '${SCRIPTFOLDER_FULLPATH}'"

### -----------------------------------------------------------

CommonSettingsFile="./common-settings.sh"
if [ ! -e ${CommonSettingsFile} ]; then
    CommonSettingsFile="${SCRIPTFOLDER_FULLPATH}/${CommonSettingsFile}"
    if [ ! -e ${CommonSettingsFile} ]; then
        echo "ERROR: ${CommonSettingsFile} is missing"
        exit 9
    fi
fi
. ${CommonSettingsFile}

### -----------------------------------------------------------
###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
###--------------------------------------------------------

### SECTION: Clean
if [ -e .venv ]; then
    while read -r -t 1; do read -r -t 1; done
    read -p "?? Wipe everything and start afresh? (<Cntl-C> to Abort!!)" ANS
    \rm -rf .venv node_modules package-lock.json cdk.out cdk/__pycache__ cdk/lib/__pycache__
    exit 0
fi

### --------------------------------------------------------------------------------

### SECTON: Initialize Python & Node.js stuff

echo "ðŸŽ¬ initialize .venv"

python3 -m venv .venv
.   .venv/bin/activate
sleep 2

echo "ðŸŽ¬ upgrade pip3"
python3 -m pip install --upgrade pip

echo "ðŸŽ¬ install pip-tools and generate requirements.txt"
python3 -m pip install pip-tools
python3 -m piptools compile --quiet --resolver=backtracking requirements.in
python3 -m piptools sync requirements.txt

pip install -r requirements.txt
pip install -r requirements-dev.txt

echo "ðŸŽ¬ Node.JS: npm install --include-dev"
npm i --include-dev

### --------------------------------------------------------------------------------

### SECTION: DERIVED-Settings

branch=$(git branch --show-current)
GITHUB_REPOSITORY=$(git remote get-url origin | sed -n 's#.*/\([^.]*\)\.git#\1#p')

echo "branch=${branch}"
echo "GITHUB_REPOSITORY=${GITHUB_REPOSITORY}"

### --------------------------------------------------------------------------------

### SECTION: Re-create/Re-generate

echo "ðŸŽ¬ cdk-synth: build CDK-deployables"
sleep 2
npx cdk synth -c git_branch=${branch} -c git_repo=${GITHUB_REPOSITORY} -o cdk.out --quiet

# EoF
