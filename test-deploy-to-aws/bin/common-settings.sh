#!/bin/false

# This license BELOW applies to all content within ./test-deploy-to-aws
# subfolder-tree, as long as it does NOT conflict with the LICENSE defined
# in the LICENSE-file that is located in the topmost folder of this Git-Repo.
# ________________________________________________________________________
# BSD 3-Clause License

# Copyright (c) 2019, org.ASUX
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.

# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.

# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Application="undefined"
ArchLayer="undefined"

###-------------------

export ENV="prod"

export AWSREGION="us-east-2"
export AWSPROFILE="sarmaapi"

export AWSPROFILEREGION="--profile ${AWSPROFILE} --region ${AWSREGION}"

###-------------------

PLATFORMID="CRRI"  ### In case the Acct# belongs to a COLLECTION of Environments
PROJECTNAME="myproj"
PROJECTID="${PLATFORMID}-${PROJECTNAME}"

export EMAILADDRESS="ToSarma@gmail.com"
export CONTACT="${EMAILADDRESS}"

### ------------------

### DOCKER related settings.
# export BUILDPLATFORM="linux/amd64"
export BUILDPLATFORM="linux/arm64"
export DOCKER_DEFAULT_PLATFORM="${BUILDPLATFORM}"
export TARGETPLATFORM="${DOCKER_DEFAULT_PLATFORM}"

###--------------------------------------------------------
###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
###--------------------------------------------------------

### SECTION: Derived Variables

DeploymentRoleName="ClamAV-Malware-Scanner-CDKDeploy"

ClamAV_CDK_StackName="${DeploymentRoleName}"
# ClamAV_CDK_StackName="ClamAV-Malware-Scanner-CDKDeploy"
### ATTENTION: This stack-name is HARDCODED in the `./cdk/cd_stack.py` file.

StackName_DeploymentRole="Role-${DeploymentRoleName}"
# ### WARNING !! These values --MUST-- be in sync with what is defined inside `./bin/create-deploy-iamrole.sh`
# DeploymentRoleName="ClamAV-Malware-Scanner-CDKDeploy"

###--------------------------------------------------------

DateTimeStamp=$(date +"%Y-%m-%dT%H:%M")

###--------------------------------------------------------

CHRGCODE="${CONTACT}"
ITOwner="${CONTACT}"

DistrList="${CONTACT}"
SVCGRP="${CONTACT}"
Validated="no"

BizOwner=${CONTACT}
ORGName=${PLATFORMID}
BizUnit="Ops"
BizSubUnit="me"
UserBase="undefined"

###--------------------------------------------------------
###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
###--------------------------------------------------------

### SECTION: Derive AWS Account Information

# aws sts get-caller-identity --query Account --output text ${AWSPROFILEREGION} >& /dev/null
AWSACCOUNTID=$( aws sts get-caller-identity --query Account --output text ${AWSPROFILEREGION} )
if [ $? -ne 0 ]; then
    echo "!! ATTENTION !! PRE-REQUISITE: You MUST login successfully -- VIA CLI -- into CloudBoost."
    echo "!! ATTENTION !! Then .. .. SUCCESSFULLY run a TEST-command with _NO_ errors:->  aws s3 ls ${AWSPROFILEREGION}"
    exit 1
fi
echo "AWSACCOUNTID = '${AWSACCOUNTID}'"

###--------------------------------------------------------
###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
###--------------------------------------------------------

BOUNDARYPOLICY="arn:aws:iam::${AWSACCOUNTID}:policy/my-BoundaryPolicy-PretendAsEnterpriseBoundary"     ### <----------------------- !! SWITCH !! <--------------------------
echo "BOUNDARYPOLICY = '${BOUNDARYPOLICY}'"

###--------------------------------------------------------
###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
###--------------------------------------------------------

TAGS_ARR=(
    Application=${Application} LOCATION=${LOCATION} ENV=${ENV}
    CHRGCODE=${CHRGCODE} ITOwner=${ITOwner}
    DistrList=${DistrList} SVCGRP=${SVCGRP} Validated=${Validated}
    BizOwner=${BizOwner} ORGName=${ORGName}
    BizUnit=${BizUnit} BizSubUnit=${BizSubUnit}
    UserBase=${UserBase}
    ArchLayer=${ArchLayer}
)

# echo ${TAGS_ARR[@]}

###------------------------------
TAGS=(
    Key=Application,Value=${Application} Key=LOCATION,Value=${LOCATION} Key=ENV,Value=${ENV}
    Key=CHRGCODE,Value=${CHRGCODE} Key=ITOwner,Value=${ITOwner}
    Key=DistrList,Value=${DistrList} Key=SVCGRP,Value=${SVCGRP} Key=Validated,Value=${Validated}
    Key=BizOwner,Value=${BizOwner} Key=ORGName,Value=${ORGName}
    Key=BizUnit,Value=${BizUnit} Key=BizSubUnit,Value=${BizSubUnit}
    Key=UserBase,Value=${UserBase}
    Key=ArchLayer,Value=${ArchLayer}
)

# echo ${TAGS[@]}

### EoF
