#!/bin/bash -f

### -----------------------------------------------------------

SCRIPTFOLDER=$(dirname -- "$0")
SCRIPTNAME=$(basename -- "$0")
echo "SCRIPTFOLDER = '${SCRIPTFOLDER}'"
echo "SCRIPTNAME = '${SCRIPTNAME}'"
if [ -e "$(pwd)/${SCRIPTFOLDER}" ]; then
    echo "Detected Relative-Path for script".
    SCRIPTFOLDER_FULLPATH="$(pwd)/${SCRIPTFOLDER}"
else
    echo "Detected Absolute-Path for script".
    SCRIPTFOLDER_FULLPATH="${SCRIPTFOLDER}"
fi
echo "SCRIPTFOLDER_FULLPATH = '${SCRIPTFOLDER_FULLPATH}'"
CWD=$(pwd)
echo "Current Working directory = ${CWD}"

# pushd . > /dev/null

### -----------------------------------------------------------
### @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
### -----------------------------------------------------------

CommonSettingsFile="./common-settings.sh"
if [ ! -e ${CommonSettingsFile} ]; then
    CommonSettingsFile="${SCRIPTFOLDER_FULLPATH}/${CommonSettingsFile}"
    if [ ! -e ${CommonSettingsFile} ]; then
        echo "ERROR: ${CommonSettingsFile} is missing"
        exit 9
    fi
fi
. ${CommonSettingsFile}

### -----------------------------------------------------------

Capabilities=CAPABILITY_NAMED_IAM   ### ATTENTION:  Note: this is a UNIQUE capability (with _NAMED_ within its name)
StackName="ClamAV-Malware-Scanner-CFTDeployRole"
# CFT_Filename=./${StackName}-CFT.yaml
CFT_Filename="./etc/cdk-deploy-iam-role-CFT.yaml"

RoleName="ClamAV-Malware-Scanner_CDK-Deploy"

CFT_Parameters=(
    ParameterKey="ENV",ParameterValue="${ENV}"
    # ParameterKey="RoleName",ParameterValue="${RoleName}"
)

###--------------------------------------------------------
###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
###--------------------------------------------------------
echo    \
aws cloudformation describe-stacks --stack-name ${StackName} ${AWSPROFILEREGION}
aws cloudformation describe-stacks --stack-name ${StackName} ${AWSPROFILEREGION} >& /dev/null
        ### describe-stacks returns "254" (non-zero) value if NO SUCH STACK.
        ### describe-stacks returns "0" if STACK EXISTS.
if [ $? -ne 0 ]; then

    echo "[✅] No such stack exists."

    printf "\e[2m%s \e[22m" $( echo \
    aws cloudformation create-stack \
        --stack-name ${StackName}   \
        --no-disable-rollback       \
        --output json               \
        --template-body file://${CFT_Filename}  \
        --parameters ${CFT_Parameters[@]}           \
        --capabilities ${Capabilities[@]}       \
        --tags ${TAGS[@]}           \
        ${AWSPROFILEREGION}
    )
    echo ''

    aws cloudformation create-stack \
        --stack-name ${StackName}   \
        --no-disable-rollback       \
        --output json               \
        --template-body file://${CFT_Filename}  \
        --parameters ${CFT_Parameters[@]}           \
        --capabilities ${Capabilities[@]}       \
        --tags ${TAGS[@]}           \
        ${AWSPROFILEREGION}
    ###----------------------------
else
    ###----------------------------
    echo "[♺] UPDATE STACK."
    printf "\e[2m%s \e[22m" $( echo \
    aws cloudformation update-stack \
        --stack-name ${StackName}   \
        --no-disable-rollback       \
        --output json               \
        --template-body file://${CFT_Filename}  \
        --parameters ${CFT_Parameters[@]}           \
        --capabilities ${Capabilities[@]}       \
        --tags ${TAGS[@]}           \
        ${AWSPROFILEREGION}
    )
    echo ''

    aws cloudformation update-stack \
        --stack-name ${StackName}   \
        --no-disable-rollback       \
        --output json               \
        --template-body file://${CFT_Filename}  \
        --parameters ${CFT_Parameters[@]}           \
        --capabilities ${Capabilities[@]}       \
        --tags ${TAGS[@]}           \
        ${AWSPROFILEREGION}
fi

###--------------------------------------------------------
###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
###--------------------------------------------------------

exit $?

### EoScript